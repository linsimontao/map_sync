[{"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\index.js":"1","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\App.js":"2","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map.js":"3","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map3DTerrain.js":"4","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\mapbox-gl-controls\\styles.js":"5","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map3dTerrain.js":"6"},{"size":219,"mtime":1607731143962,"results":"7","hashOfConfig":"8"},{"size":746,"mtime":1607748774848,"results":"9","hashOfConfig":"8"},{"size":2594,"mtime":1607739086058,"results":"10","hashOfConfig":"8"},{"size":3380,"mtime":1607738721210,"results":"11","hashOfConfig":"8"},{"size":3948,"mtime":1607738956667,"results":"12","hashOfConfig":"8"},{"size":3380,"mtime":1607738721210,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"110d0wm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\index.js",[],["30","31"],"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\App.js",["32"],"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map.js",["33"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './Map.css';\r\nimport StylesControl from './mapbox-gl-controls/styles';\r\nimport './mapbox-gl-controls/styles.css';\r\n\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESSTOKEN;\r\n\r\nconst Map = (props) => {\r\n    const client = props.client;\r\n    const mapContainerRef = useRef(null);\r\n    const [mapState, setMapState] = useState({\r\n        lng: 139.75058388557693,\r\n        lat: 35.66840472071193,\r\n        zoom: 14,\r\n        pitch: 0,\r\n        bearing: 0\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            const map = new mapboxgl.Map({\r\n                container: mapContainerRef.current,\r\n                style: \"mapbox://styles/mapbox/streets-v11\",\r\n                center: [mapState.lng, mapState.lat],\r\n                zoom: mapState.zoom,\r\n            });\r\n            map.addControl(new StylesControl(), 'top-right')\r\n            const handleEvt = () => {\r\n                let s = {\r\n                    lng: map.getCenter().lng,\r\n                    lat: map.getCenter().lat,\r\n                    zoom: map.getZoom(),\r\n                    pitch: map.getPitch(),\r\n                    bearing: map.getBearing()\r\n                };\r\n                setMapState(s);\r\n                client.send(\r\n                    JSON.stringify({\r\n                        type: \"message\",\r\n                        ...s,\r\n                    })\r\n                );\r\n            }\r\n\r\n            map.on(\"dragend\", handleEvt);\r\n            map.on(\"zoomend\", handleEvt);\r\n            map.on(\"rotateend\", handleEvt);\r\n            map.on(\"ptichend\", handleEvt);\r\n\r\n            client.onmessage = (msg) => {\r\n                const data = JSON.parse(msg.data);\r\n                console.log(\"From server: \", data);\r\n        \r\n                map.jumpTo({\r\n                    center: [data.lng, data.lat],\r\n                    zoom: data.zoom,\r\n                    pitch: data.pitch,\r\n                    bearing: data.bearing\r\n                });\r\n            };\r\n\r\n            return () => map.remove();\r\n        }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebarStyle\">\r\n                LNG: {mapState.lng.toFixed(2)} |\r\n                LAT: {mapState.lat.toFixed(2)} |\r\n                Zoom: {mapState.zoom.toFixed(2)} |\r\n                Pitch: {mapState.pitch.toFixed(2)} |\r\n                Bearing: {mapState.bearing.toFixed(2)}\r\n            </div>\r\n            <div ref={mapContainerRef} className='mapContainer' />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map3DTerrain.js",["34"],"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\mapbox-gl-controls\\styles.js",[],["35","36"],"C:\\work\\Mapbox\\map_sync\\client2.2\\src\\Map3dTerrain.js",["37"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './Map.css';\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_ACCESSTOKEN;\r\n\r\nconst Map3d = (props) => {\r\n    const client = props.client;\r\n    const mapContainerRef = useRef(null);\r\n    const [mapState, setMapState] = useState({\r\n        lng: 139.75058388557693,\r\n        lat: 35.66840472071193,\r\n        zoom: 14,\r\n        pitch: 0,\r\n        bearing: 0\r\n    });\r\n\r\n    useEffect(\r\n        () => {\r\n            const map = new mapboxgl.Map({\r\n                container: mapContainerRef.current,\r\n                style: \"mapbox://styles/mapbox-map-design/ckhqrf2tz0dt119ny6azh975y\",\r\n                center: [mapState.lng, mapState.lat],\r\n                zoom: mapState.zoom,\r\n            });\r\n            map.on('load', function () {\r\n                map.addSource('mapbox-dem', {\r\n                    'type': 'raster-dem',\r\n                    'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\r\n                    'tileSize': 512,\r\n                    'maxzoom': 14\r\n                });\r\n                // add the DEM source as a terrain layer with exaggerated height\r\n                map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\r\n\r\n                // add a sky layer that will show when the map is highly pitched\r\n                map.addLayer({\r\n                    'id': 'sky',\r\n                    'type': 'sky',\r\n                    'paint': {\r\n                        'sky-type': 'atmosphere',\r\n                        'sky-atmosphere-sun': [0.0, 0.0],\r\n                        'sky-atmosphere-sun-intensity': 15\r\n                    }\r\n                });\r\n            });\r\n            \r\n            const handleEvt = () => {\r\n                let s = {\r\n                    lng: map.getCenter().lng,\r\n                    lat: map.getCenter().lat,\r\n                    zoom: map.getZoom(),\r\n                    pitch: map.getPitch(),\r\n                    bearing: map.getBearing()\r\n                };\r\n                setMapState(s);\r\n                client.send(\r\n                    JSON.stringify({\r\n                        type: \"message\",\r\n                        ...s,\r\n                    })\r\n                );\r\n            }\r\n\r\n            map.on(\"dragend\", handleEvt);\r\n            map.on(\"zoomend\", handleEvt);\r\n            map.on(\"rotateend\", handleEvt);\r\n            map.on(\"ptichend\", handleEvt);\r\n\r\n            client.onmessage = (msg) => {\r\n                const data = JSON.parse(msg.data);\r\n                console.log(\"From server: \", data);\r\n        \r\n                map.jumpTo({\r\n                    center: [data.lng, data.lat],\r\n                    zoom: data.zoom,\r\n                    pitch: data.pitch,\r\n                    bearing: data.bearing\r\n                });\r\n            };\r\n\r\n            return () => map.remove();\r\n        }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebarStyle\">\r\n                LNG: {mapState.lng.toFixed(2)} |\r\n                LAT: {mapState.lat.toFixed(2)} |\r\n                Zoom: {mapState.zoom.toFixed(2)} |\r\n                Pitch: {mapState.pitch.toFixed(2)} |\r\n                Bearing: {mapState.bearing.toFixed(2)}\r\n            </div>\r\n            <div ref={mapContainerRef} className='mapContainer' />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map3d;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"47","line":64,"column":12,"nodeType":"48","endLine":64,"endColumn":14,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"47","line":82,"column":12,"nodeType":"48","endLine":82,"endColumn":14,"suggestions":"50"},{"ruleId":"38","replacedBy":"51"},{"ruleId":"40","replacedBy":"52"},{"ruleId":"46","severity":1,"message":"47","line":82,"column":12,"nodeType":"48","endLine":82,"endColumn":14,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client', 'mapState.lat', 'mapState.lng', and 'mapState.zoom'. Either include them or remove the dependency array.","ArrayExpression",["56"],["57"],["54"],["55"],["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"59","fix":"61"},{"desc":"59","fix":"62"},"Update the dependencies array to be: [client, mapState.lat, mapState.lng, mapState.zoom]",{"range":"63","text":"64"},{"range":"65","text":"64"},{"range":"66","text":"64"},[2114,2116],"[client, mapState.lat, mapState.lng, mapState.zoom]",[2898,2900],[2898,2900]]